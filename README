
                 _,.---------------------------------------------+
             ,-"                                                 ;
            ,;                                                   ;
            !                                                    ;
            :.           ,----------------------------,          ;
             :,          ",                           ;          ;
              :.          :,                          ;          ;
               ',          ',                         ;          ;
                ',          ',                        ;          ;
                 ',          ',                      .;          ;
                  ',          ',                   ,-"           ;
                   ',          ',               ,-'             .|
                    ',          ',           ,-'              ,-"
                     ',          ',       ,-'              ,-'
                      ',          ',   ,-'              ,-'
                       ',          ',-'              ,-'
                        ',          '             ,-'
                         ',                    ,-'
                          ',                ,-'
                           ',            ,-'
                            ',        ,-'
                             ',   _,-'
                               ","


                                    _ＯＤＫＯ_

                     a minimal graphical programming language.

- DESCRIPTION @L36
- LANGUAGE DESIGN @L43
- SYNTAX AND EXAMPLES @L56
- KEYBOARD SHORTCUTS @L65

[ DESCRIPTION ]

the main purpose is to make it look cool and make working in it cool enough just
because  you  want  to  feel like a cool hacker, functionality is the last of my
concerns  and  the  language  is  being  designed as i'm going through it but it
doesn't matter as long as it's cool.

[ LANGUAGE DESIGN ]

> everything is vague right now, but this gives a broad outline of what i'm
  trying to accomplish and will aid in development

you  have blocks as rows in columns, you then connect the blocks mostly linearly
and the program is executed in parallel in that order.

each  block  contains  a  command  and  arguments for it, it then passes what it
returns  down  to the connected block(s). because odko is event-driven each line
should start with an event command,  and then when that event occurs the program
branches out from that first block by activating the connected blocks.

[ SYNTAX AND EXAMPLES ]

look in the  code/ folder in this repository, depending on how far i have gotten
in working on this project  there will be either screenshots of code in the odko
ui or plaintext representations of code.

yes, i am planning on coming up with a way to write plaintext odko code,  and it
may be presented with a tui version of odko as well.

[ KEYBOARD SHORTCUTS ]

> ^ is short for  "ctrl + ..."  and  capital  letters imply shift being pressed,
  slashes  delimitate  aliases  of  a  certain  function, and shortcuts that are
  longer  than  one or two characters and begin with a capital represent special
  keys on the keyboard
> we  call  them keyboard shortcuts but there's no mouse control implemented yet
  so they are really the only kind of control you have right now

- DEFAULT MODE @L80
- EDIT MODE @L95
- CONNECT MODE @L104
- MOVE MODE @L112
- RUN MODE @L116

A) default mode
  a: add block
  A: add column
  x: remove block
  Delete: remove column
  `: enter run mode (show console)
  Z: toggle debug view
  t: test current block
  g: move block (enters move mode)
  c: connect block (enters connect mode)
  d: disconnect connection to the current block
  D: disconnect connections originating from current block
  e/Enter/F2: edit block (enters edit mode)
  Arrow Keys: change focus

B) edit mode
  Escape/Enter: exit edit mode
  ArrowLeft/Right: move edit cursor
  ArrowUp/Home: move cursor to start of block
  ArrowDown/End: move cursor to end of block
  Backspace: delete character behind cursor
  Delete: delete character in front of cursor
  normal typing: normal typing

C) connect mode
  Escape/c: exit connect mode and cancel connection
  Enter/C: exit connect mode and confirm connection
  ArrowRight: select column right of the focused block
  ArrowLeft: select column left of the focused block
  ArrowUp/Down: change selected block
  d: if the highlighted connection exists, disconnect it

D) move mode
  Escape/Enter/g: exit move mode
  Arrow Keys: move block

E) run mode
  `: exit run mode (hide console)
  Tab: start execution
  Shift + Tab/F12: halt execution (discard set registers)
  Shift + F12: halt execution (preserve set registers)
